---
sudo: required
dist: trusty
language: python
python:
  - "2.7"

services:
  - docker

env:
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=latest
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=2.4.0.0
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=2.3.0.0
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=2.2.0.0
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=2.1.0.0
  - DOCKER_DISTRO="debian:jessie" ANSIBLE_VERSION=2.0.0.0
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=latest
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=2.4.0.0
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=2.3.0.0
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=2.2.0.0
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=2.1.0.0
  - DOCKER_DISTRO="ubuntu:trusty" ANSIBLE_VERSION=2.0.0.0

branches:
  only:
    - master
    - travis_tests

before_install:
  - sudo apt-get update -qq
  - docker pull "$DOCKER_DISTRO"

install: true
before_script:
  - container_id=$(mktemp)
  - echo "$container_id"
  - >
    docker run --detach
    --volume="${PWD}":/etc/ansible/roles/rkhunter:ro
    $DOCKER_DISTRO bash -c 'while true; do sleep 10; done' > "${container_id}"
  - >
    docker exec "$(cat ${container_id})" bash -c "
    apt-get update &&
    apt-get upgrade -y &&
    apt-get install -y \
      sudo build-essential libffi-dev libssl-dev python-pip python-dev &&
    pip install --upgrade setuptools &&
    mkdir -p /etc/ansible &&
    echo '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts"
  - >
    docker exec "$(cat ${container_id})" bash -c "
    if [ \"$ANSIBLE_VERSION\" = \"latest\" ]; then pip install ansible;
    else pip install ansible==$ANSIBLE_VERSION; fi"
  - >
    docker exec "$(cat ${container_id})" bash -c "
    if [ \"$ANSIBLE_VERSION\" = \"latest\" ]; then pip install ansible-lint; fi"

script:
  # Check the role/playbook's syntax.
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook --syntax-check /etc/ansible/roles/rkhunter/tests/test.yml

  # Run the role/playbook with ansible-playbook.
  - >
    docker exec "$(cat ${container_id})"
    ansible-playbook -vvvv /etc/ansible/roles/rkhunter/tests/test.yml

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    docker exec "$(cat ${container_id})" bash -c "
    ansible-playbook /etc/ansible/roles/rkhunter/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)"

  - >
    docker exec "$(cat ${container_id})" bash -c "
    if [ \"$ANSIBLE_VERSION\" = \"latest\" ]; then
    ansible-lint /etc/ansible/roles/rkhunter/tests/test.yml || true; fi"
